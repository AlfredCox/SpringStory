package com.dori.Dori90v.connection.packet.headers;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public enum InHeader {
    NO(-1),
    // CLogin::OnPacket :
    CheckPassword(1),
    GuestIDLogin(2),
    AccountInfoRequest(3),
    WorldInfoRequest(4),
    SelectWorld(5),
    CheckUserLimit(6),
    ConfirmEULA(7),
    SetGender(8),
    CheckPinCode(9),
    UpdatePinCode(10),
    WorldRequest(11),
    LogoutWorld(12),
    ViewAllChar(13),
    SelectCharacterByVAC(14),
    VACFlagSet(15),
    CheckNameChangePossible(16),
    RegisterNewCharacter(17),
    CheckTransferWorldPossible(18),
    SelectCharacter(19),
    MigrateIn(20),
    CheckDuplicatedID(21),
    CreateNewCharacter(22),
    CreateNewCharacterInCS(23), // un-used
    DeleteCharacter(24),
    AliveAck(25),
    ExceptionLog(26),
    SecurityPacket(27), // CLIENT_ERROR ?
    EnableSPWRequest(28),
    CheckSPWRequest(29),
    EnableSPWRequestByACV(30),
    CheckSPWRequestByACV(31),
    CheckOTPRequest(32),
    CheckDeleteCharacterOTP(33),
    CreateSecurityHandle(34),
    SSOErrorLog(35),
    ClientDumpLog(36),
    CheckExtraCharInfo(37),
    CreateNewCharacter_Ex(38),
    EndSocket(39),
    BeginUser(40),
    UserTransferFieldRequest(41),
    UserTransferChannelRequest(42),
    UserMigrateToCashShopRequest(43),
    UserMove(44), // CHANGE_MAP
    UserSitRequest(45), // Enter cash shop?
    UserPortableChairSitRequest(46),
    UserMeleeAttack(47),
    UserShootAttack(48),
    UserMagicAttack(49),
    UserBodyAttack(50),
    UserMovingShootAttackPrepare(51),
    UserHit(52),
    UserAttackUser(53),
    UserChat(54),
    UserADBoardClose(55),
    UserEmotion(56),
    UserActivateEffectItem(57),
    UserUpgradeTombEffect(58),
    UserHP(59),
    Premium(60),
    UserBanMapByMob(61),
    UserMonsterBookSetCover(62),
    UserSelectNpc(63),
    UserRemoteShopOpenRequest(64),
    UserScriptMessageAnswer(65),
    UserShopRequest(66),
    UserTrunkRequest(67),
    UserEntrustedShopRequest(68),
    UserStoreBankRequest(69),
    UserParcelRequest(70),
    UserEffectLocal(71),
    ShopScannerRequest(72),
    ShopLinkRequest(73),
    AdminShopRequest(74),
    UserGatherItemRequest(75),
    UserSortItemRequest(76),
    UserChangeSlotPositionRequest(77),
    UserStatChangeItemUseRequest(78),
    UserStatChangeItemCancelRequest(79),
    UserStatChangeByPortableChairRequest(80),
    UserMobSummonItemUseRequest(81),
    UserPetFoodItemUseRequest(82),
    UserTamingMobFoodItemUseRequest(83),
    UserScriptItemUseRequest(84),
    UserConsumeCashItemUseRequest(85),
    UserDestroyPetItemRequest(86),
    UserBridleItemUseRequest(87),
    UserSkillLearnItemUseRequest(88),
    UserSkillResetItemUseRequest(89),
    UserShopScannerItemUseRequest(90),
    UserMapTransferItemUseRequest(91),
    UserPortalScrollUseRequest(92),
    UserUpgradeItemUseRequest(93),
    UserHyperUpgradeItemUseRequest(94), // HyperUpgradeItemUse
    UserItemOptionUpgradeItemUseRequest(95), // ItemOptionUpgradeItemUse -> potential item
    UserUIOpenItemUseRequest(96),
    UserItemReleaseRequest(97),
    UserAbilityUpRequest(98),
    UserAbilityMassUpRequest(99),
    UserChangeStatRequest(100),
    UserChangeStatRequestByItemOption(101),
    UserSkillUpRequest(102),
    UserSkillUseRequest(103),
    UserSkillCancelRequest(104),
    UserSkillPrepareRequest(105),
    UserDropMoneyRequest(106),
    UserGivePopularityRequest(107),
    UserPartyRequest(108),
    UserCharacterInfoRequest(109),
    UserActivatePetRequest(110),
    UserTemporaryStatUpdateRequest(111),
    UserPortalScriptRequest(112),
    UserPortalTeleportRequest(113),
    UserMapTransferRequest(114),
    UserAntiMacroItemUseRequest(115),
    UserAntiMacroSkillUseRequest(116),
    UserAntiMacroQuestionResult(117),
    UserClaimRequest(118),
    UserQuestRequest(119),
    UserCalcDamageStatSetRequest(120),
    UserThrowGrenade(121),
    UserMacroSysDataModified(122), // report?
    UserSelectNpcItemUseRequest(123),
    UserLotteryItemUseRequest(124),
    UserItemMakeRequest(125),
    UserSueCharacterRequest(126),
    UserUseGachaponBoxRequest(127),
    UserUseGachaponRemoteRequest(128),
    UserUseWaterOfLife(129),

    UserRepairDurabilityAll(130),
    UserRepairDurability(131),
    UserQuestRecordSetState(132),
    UserClientTimerEndRequest(133),
    UserFollowCharacterRequest(134),
    UserFollowCharacterWithdraw(135),
    UserSelectPQReward(136),
    UserRequestPQReward(137),
    SetPassengerResult(138),
    BroadcastMsg(139),
    GroupMessage(140),
    Whisper(141),
    CoupleMessage(142),
    Messenger(143),
    MiniRoom(144),     // PLAYER_INTERACTION in odin
    PartyRequest(145),
    PartyResult(146),
    ExpeditionRequest(147),
    PartyAdverRequest(148),
    GuildRequest(149),
    GuildResult(150),
    Admin(151),
    Log(152),
    FriendRequest(153),
    MemoRequest(154),
    MemoFlagRequest(155),
    EnterTownPortalRequest(156),
    EnterOpenGateRequest(157),
    SlideRequest(158),
    FuncKeyMappedModified(159),
    RPSGame(160),
    MarriageRequest(161),
    WeddingWishListRequest(162),
    WeddingProgress(163),
    GuestBless(164),
    BoobyTrapAlert(165),
    StalkBegin(166),
    AllianceRequest(167),
    AllianceResult(168),
    FamilyChartRequest(169),
    FamilyInfoRequest(170),
    FamilyRegisterJunior(171),
    FamilyUnregisterJunior(172),
    FamilyUnregisterParent(173),
    FamilyJoinResult(174),
    FamilyUsePrivilege(175),
    FamilySetPrecept(176),
    FamilySummonResult(177),
    ChatBlockUserReq(178),
    GuildBBS(179),
    UserMigrateToITCRequest(180),
    UserExpUpItemUseRequest(181),
    UserTempExpUseRequest(182),
    NewYearCardRequest(183),
    RandomMorphRequest(184),
    CashItemGachaponRequest(185),
    CashGachaponOpenRequest(186),
    ChangeMaplePointRequest(187),
    TalkToTutor(188),
    RequestIncCombo(189),
    MobCrcKeyChangedReply(190),
    RequestSessionValue(191),
    UpdateGMBoard(192),
    AccountMoreInfo(193),
    FindFriend(194),
    AcceptAPSPEvent(195),
    UserDragonBallBoxRequest(196),
    UserDragonBallSummonRequest(197),
    //BeginPet(198),
    PetMove(199),
    PetAction(200),
    PetInteractionRequest(201),
    PetDropPickUpRequest(202),
    PetStatChangeItemUseRequest(203),
    PetUpdateExceptionListRequest(204),
    PetActionCommand(205), // LP_END_PET ->0xCD
//CP_BEGIN_SUMMONED = 0xCE,
    SummonedMove(207),
    SummonedAttack(208),
    SummonedHit(209),
    SummonedSkill(210),
    Remove(211),
    EndSummoned(212),
//CP_BEGIN_DRAGON = 0xD5,
    DragonMove(214),
//CP_END_DRAGON = 0xD7,
    QuickslotKeyMappedModified(216),
    PassiveskillInfoUpdate(217),
    UpdateScreenSetting(218),
    UserAttackUser_Specific(219),
    UserPamsSongUseRequest(220),
    QuestGuideRequest(221),
    UserRepeatEffectRemove(222),
//CP_END_USER = 0xDF,
//CP_BEGIN_FIELD = 0xE0,
//CP_BEGIN_LIFEPOOL = 0xE1,
//CP_BEGIN_MOB = 0xE2,
    MobMove(227),
    MobApplyCtrl(228),
    MobDropPickUpRequest(229),
    MobHitByObstacle(230),
    MobHitByMob(231),
    MobSelfDestruct(232),
    MobAttackMob(233),
    MobSkillDelayEnd(234),
    MobTimeBombEnd(235),
    MobEscortCollision(236),
    MobRequestEscortInfo(237),
    CMobEscortStopEndRequest(238),
//CP_END_MOB = 0xEF,
//CP_BEGIN_NPC = 0xF0,
    NpcMove(241),
    NpcSpecialAction(242),
//CP_END_NPC = 0xF3,
//CP_END_LIFEPOOL = 0xF4,
//CP_BEGIN_DROPPOOL = 0xF5,
    DropPickUpRequest(246),
//CP_END_DROPPOOL = 0xF7,
//CP_BEGIN_REACTORPOOL = 0xF8,
    ReactorHit(249),
    ReactorTouch(250),
    RequireFieldObstacleStatus(251),
//CP_END_REACTORPOOL = 0xFC,
//CP_BEGIN_EVENT_FIELD = 0xFD,
    EventStart(254),
    SnowBallHit(255),
    SnowBallTouch(256),
    CoconutHit(257),
    TournamentMatchTable(258),
    PulleyHit(259),
//CP_END_EVENT_FIELD = 0x104,
//CP_BEGIN_MONSTER_CARNIVAL_FIELD = 0x105,
    MCarnivalRequest(262),
//CP_END_MONSTER_CARNIVAL_FIELD = 0x107,
    ContiState(264), // idk?
//CP_BEGIN_PARTY_MATCH = 0x109,
    InvitePartyMatch(266),
    CancelInvitePartyMatch(267),
//CP_END_PARTY_MATCH = 0x10C,
    RequestFootHoldInfo(269),
    FootHoldInfo(270),
//CP_END_FIELD = 0x10F,
//CP_BEGIN_CASHSHOP = 0x110,
    CashShopChargeParamRequest(273),
    CashShopQueryCashRequest(274),
    CashShopCashItemRequest(275),
    CashShopCheckCouponRequest(276),
    CashShopGiftMateInfoRequest(277),
//CP_END_CASHSHOP = 0x116,
    CheckSSN2OnCreateNewCharacter(279),
    CheckSPWOnCreateNewCharacter(280),
    FirstSSNOnCreateNewCharacter(281),
//CP_BEGIN_RAISE = 0x11A,
    RaiseRefesh(283),
    RaiseUIState(284),
    RaiseIncExp(285),
    RaiseAddPiece(286),
//CP_END_RAISE = 0x11F,
    SendMateMail(288),
    RequestGuildBoardAuthKey(289),
    RequestConsultAuthKey(290),
    RequestClassCompetitionAuthKey(291),
    RequestWebBoardAuthKey(292),
//CP_BEGIN_ITEMUPGRADE = 0x125,
    GoldHammerRequest(294),
    GoldHammerComplete(295),
    ItemUpgradeComplete(296),
//CP_END_ITEMUPGRADE = 0x129,
//CP_BEGIN_BATTLERECORD = 0x12A,
    BattleRecordOnOffRequest(299),
//CP_END_BATTLERECORD = 0x12C,
//CP_BEGIN_MAPLETV = 0x12D,
    MapleTVSendMessageRequest(302),
    MapleTVUpdateViewCount(303),
//CP_END_MAPLETV = 0x130,
//CP_BEGIN_ITC = 0x131,
    ITCChargeParamRequest(306),
    ITCQueryCashRequest(307),
    ITCItemRequest(308),
//CP_END_ITC = 0x135,
//CP_BEGIN_CHARACTERSALE = 0x136,
    CP_CheckDuplicatedIDInCS(311),
//CP_END_CHARACTERSALE = 0x138,
    CP_LogoutGiftSelect(313),
//CP_NO = 0x13A,
    ;

    private static final List<InHeader> spam = Arrays.asList(
            UpdateScreenSetting,
            UserMove
    );

    private final short value;
    private final static Map<Short, InHeader> opToHeaderMap = new HashMap<>();

    static {
        for (InHeader ih : values()) {
            opToHeaderMap.put(ih.getValue(), ih);
        }
    }

    InHeader(int op) {
        this.value = (short) op;
    }

    public short getValue() {
        return value;
    }

    public static InHeader getInHeaderByOp(int op) {
        return opToHeaderMap.getOrDefault((short) op, null);
    }

    public static boolean isSpamHeader(InHeader inHeaderByOp) {
        return spam.contains(inHeaderByOp);
    }
}
